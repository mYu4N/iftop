========2023-12
add timestamp

demo:
# iftop -i eth0 -P -N -t -n
interface: eth0
IP address is: 10.0.209.141
MAC address is: 00:16:3e:0c:ffffffc1:ffffff85
Listening on eth0
Fri Dec  1 17:31:32 2023 <---- this line
 
   # Host name (port/service if enabled)            last 2s   last 10s   last 40s cumulative
--------------------------------------------------------------------------------------------
   1 10.0.209.141:35232                       =>     27.8Kb     27.8Kb     27.8Kb     6.94KB
     100.100.30.26:80                         <=       160b       160b       160b        40B
   2 10.0.209.141:22                          =>       656b       656b       656b       164B
     106.11.34.37:57928                       <=       208b       208b       208b        52B
--------------------------------------------------------------------------------------------
Total send rate:                                     28.4Kb     28.4Kb     28.4Kb
Total receive rate:                                    368b       368b       368b
Total send and receive rate:                         28.8Kb     28.8Kb     28.8Kb
--------------------------------------------------------------------------------------------
Peak rate (sent/received/total):                     28.4Kb       368b     28.8Kb
Cumulative (sent/received/total):                    7.10KB        92B     7.19KB
============================================================================================
=============
README for iftop
$Id: README,v 1.8 2003/06/06 22:42:34 pdw Exp $

Read the INSTALL file, manual page and source code for more information.

iftop must be run as root.

KNOWN ISSUES

RedHat 7.2:

There is a bug in the version of ncurses distibuted with RedHat 7.2 that
will cause iftop to segfault.  The RPM in RedHat's Rawhide distribution
fixes this.

Slackware 8.1:

You may need to upgrade your libpcap (by updating the tcpdump package) 
in order to compile iftop.

FreeBSD 4.7:

This version of FreeBSD lacks a proper gethostbyaddr_r function. You should
choose an alternative name resolution technique using the --with-resolver=...
option to configure.

Solaris:

On Solaris, iftop has to run in promiscuous mode in order to capture
outgoing packets.  iftop autoconfigures to run in promiscuous mode on
Solaris, but will filter out non-broadcast packets which are not
addressed to or from localhost.  On Solaris, the -p option merely
disables that filter.

If you have some other sort of system that behaves like Solaris in
needing promiscuous mode, you can pass --enable-default-promiscuous to
configure to enable this behavior.

Cf. http://www.tcpdump.org/lists/workers/2002/02/msg00010.html

The version of curses distributed with Solaris may not be sufficient for
iftop's needs. You will probably need ncurses or similar.

